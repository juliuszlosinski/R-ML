data <- read.csv("Salary_Data.csv")
data$YearsExperience
linear_regression_model <- lm(y~x)
data <- read.csv("Salary_Data.csv")
data <- read.csv("Salary_Data.csv")
X <- data$YearsExperience
y <- data$Salary
linear_regression_model <- lm(y~x)
linear_regression_model <- lm(y~x)
X <- data$YearsExperience
y <- data$Salary
linear_regression_model <- lm(y~x)
linear_regression_model <- lm(y ~ x)
linear_regression_model = lm(y ~ x)
install.packages('caTools')
?caTools
?caTools
split = sample.split(data$Salary, SplitRatio = 2/3)
split = sample.split(data$Salary, SplitRatio = 2/3)
split = sample.split(data$Salary, SplitRatio = 2/3)
split = caTools::sample.split(data$Salary, SplitRatio = 2/3)
set.seed(123)
split = caTools::sample.split(data$Salary, SplitRatio = 2/3)
print(split)
training_set = subset(data, split=TRUE)
training_set = subset(data, split==TRUE)
print(training_set)
print(lenght(training_set))
print(size(training_set))
print(length(training_set))
print(length(training_set))
print(typeof(training_set))
print(training_set)
length(training_set$Salary)
training_set = subset(data, split)
training_set = subset(data, split)
print(training_set)
length(training_set$Salary)
test_set = subset(data, FALSE)
print(test_set$Salary)
print(test_set$Salary)
test_set = subset(data, split==FALSE)
print(test_set$Salary)
View(training_set)
print(split==FALSE)
print(split==FALSE)
training_set = subset(data, split==TRUE)
print(training_set)
length(training_set$Salary)
test_set = subset(data, split==FALSE)
print(split==FALSE)
print(test_set$Salary)
library(caTools)
split_format <- caTools::sample.split(data$Salary, SplitRatio = 2/3)
training_data <- subset(data, split_format == TRUE)
testing_data <- subset(data, split_format == FALSE)
print(length(testing_data$Salary))
print("Number of training data:")
print(length(training_data$Salary))
print("Number of testing data:")
plot(
training_data$YearsExperience,
training_data$Salary,
main="Salary(years)",
xlab="Years",
ylab="Salary",
col="red"
)
linear_regression_model <- lm(training_data$Salary ~ training_data$YearsExperience)
print(x)
x <- training_data$YearsExperience
print(x)
print(length(x)
print(length(x))
print(length(x))
as.data.frame(x)
print(lenght(as.data.frame(x))
print(lenght(as.data.frame(x))
print(length(as.data.frame(x))
print(length(as.data.frame(x))
print(length(as.data.frame(x))
print(length(as.data.frame(x))
print(length(as.data.frame(x)))
x <- as.data.frame(training_data$YearsExperience)
print(x)
predict(linear_regression_model, x)
plot(
x,y
)
plot(
x_testing,y_predicted
)
x_testing <- as.data.frame(training_data$YearsExperience)
y_predicted <- predict(linear_regression_model, x)
plot(
x_testing,y_predicted
)
plot(
x_testing$`training_data$YearsExperience`,y_predicted
)
?lm
regression_model <- lm(formula = training_data$Salary ~ training_data$YearsExperience)
print(predict(regression_model, as.data.frame(testing_data$YearsExperience)))
regression_model <- lm(formula = training_data$Salary ~ training_data$YearsExperience)
print(predict(regression_model, as.data.frame(testing_data$YearsExperience)))
regression_model <- lm(formula = training_data$Salary ~ training_data$YearsExperience)
print(predict(regression_model, as.data.frame(testing_data$YearsExperience)))
regression_model <- lm(formula = training_data$Salary ~ training_data$YearsExperience)
regression_linear_model <- lm(training_data$Salary ~ training_data$YearsExperience)
predicted <- predict(regression_linear_model, as.data.frame(training_data$YearsExperience))
print(predicted)
regression_linear_model <- lm(training_data$Salary ~ training_data$YearsExperience)
summary(regression_linear_model)
data <- read.csv("Salary_Data.csv")
library(caTools)
split_format <- caTools::sample.split(data$Salary, SplitRatio = 2/3)
training_data <- subset(data, split_format == TRUE)
testing_data <- subset(data, split_format == FALSE)
print("Number of training data:")
print(length(training_data$Salary))
print("Number of testing data:")
print(length(testing_data$Salary))
regression_linear_model <- lm(training_data$Salary ~ training_data$YearsExperience)
summary(regression_linear_model)
y_predicted <- predict(regression_linear_model, as.data.frame(testing_data$YearsExperience))
print(y_predicted)
print(testing_data$Salary)
print(testing_data$Salary)
print(y_predicted)
print(length(testing_data$Salary))
y_predicted <- predict(regression_linear_model, testing_data)
y_predicted <- predict(regression_linear_model, as.data.frame(testing_data$YearsExperience))
y_predicted <- predict(regression_linear_model, testing_data)
print(y_predicted)
print(y_predicted)
data_set <- read.csv("Salary_Data.csv")
data_set <- read.csv("Salary_Data.csv")
library(caTools)
split_format <- caTools::sample.split(data_set$Salary, SplitRatio = 2/3)
print(split_format)
print(split_format==TRUE)
print(split_format==FALSE)
data_set <- read.csv("Salary_Data.csv")
library(caTools)
split_format <- caTools::sample.split(data_set$Salary, SplitRatio = 2/3)
training_data <- subset(data_set, split_format == TRUE)
testing_data <- subset(data_set, split_format == FALSE)
print("Size of training data:")
print(length(training_data))
print("Size of training data:")
print(length(training_data$YearsExperience))
print("Size of testing data:")
print(length(testing_data$YearsExperience))
regression_linear_model <- lm(
training_data$Salary ~ training_data$YearsExperience
)
regression_linear_model <- lm(
training_data$Salary ~ training_data$YearsExperience
)
y_predicted <- predict(
regression_linear_model,
testing_data
)
print(y_predicted)
y_predicted <- predict(
regression_linear_model,
as.data.frame(testing_data$YearsExperience)
)
y_predicted <- predict(
regression_linear_model,
as.data.frame(testing_data$YearsExperience)
)
print("Size of training data:")
print(length(training_data$YearsExperience))
print("Size of testing data:")
print(length(testing_data$YearsExperience))
regression_linear_model <- lm(
training_data$Salary ~ training_data$YearsExperience
)
y_predicted <- predict(
regression_linear_model,
as.data.frame(testing_data$YearsExperience)
)
# Loading data
data_set <- read.csv("Salary_Data.csv")
library(caTools)
split_format <- caTools::sample.split(data_set$Salary, SplitRatio = 2/3)
training_data <- subset(data_set, split_format == TRUE)
testing_data <- subset(data_set, split_format == FALSE)
print("Size of training data:")
print(length(training_data$YearsExperience))
print("Size of testing data:")
print(length(testing_data$YearsExperience))
# Fitting Simple Linear Regression model.
regression_linear_model <- lm(
training_data$Salary ~ training_data$YearsExperience
)
# Predicting on the test results
y_predicted <- predict(
regression_linear_model,
as.data.frame(testing_data$YearsExperience)
)
# Printing results.
print(y_predicted)
install.packages(ggplot2)
install.packages('ggplot2')
?ggplot2
?ggplot2
??ggplot2
?ggplot2
ggplot2::qplot(training_data$YearsExperience, training_data$Salary)
ggplot2::qplot(
training_data$YearsExperience,
training_data$Salary,
xlab = "Years of experience",
ylab = "Salary"
)
ggplot2::qplot(
training_data$YearsExperience,
training_data$Salary,
xlab = "Years of experience",
ylab = "Salary",
xlim = 5
)
ggplot2::qplot(
training_data$YearsExperience,
training_data$Salary,
xlab = "Years of experience",
ylab = "Salary",
xlim = 1000
)
ggplot2::qplot(
training_data$YearsExperience,
training_data$Salary,
xlab = "Years of experience",
ylab = "Salary"
)
ggplot2::qplot(
training_data$YearsExperience,
training_data$Salary,
xlab = "Years of experience",
ylab = "Salary",
title="Salary(years of experience)"
)
ggplot2::qplot(
training_data$YearsExperience,
training_data$Salary,
xlab = "Years of experience",
ylab = "Salary",
main="Salary(years of experience)"
)
ggplot::ggplot()
ggplot2::ggplot()
ggplot2::ggplot() + ggplot2::geom_point(ggplot2::aes(x = training_set$YearsExperience, y=training_set$Salary))
ggplot2::ggplot() + ggplot2::geom_point(ggplot2::aes(x = training_set$YearsExperience, y=training_set$Salary), color="red")
+ ggplot2::geom_point(ggplot2::aes(x = training_set$YearsExperience, y=training_set$Salary), color="red")
+ ggplot2::geom_point(ggplot2::aes(x = testing_set$YearsExperience, y=testing_set$Salary), color="red")
+ ggplot2::geom_point(ggplot2::aes(x = testing_set$YearsExperience, y=testing_set$Salary), color="blue")
ggplot2::ggplot() + ggplot2::geom_point(ggplot2::aes(x = training_set$YearsExperience, y=training_set$Salary), color="red")
+ ggplot2::geom_point(ggplot2::aes(x = testing_set$YearsExperience, y=testing_set$Salary), color="blue")
